{"version":3,"sources":["node_modules/tsup/assets/esm_shims.js","app.ts","src/routes/wechat.ts","src/store/index.ts","src/utils/index.ts","src/constant/index.ts","src/lowdb/user.ts","src/lowdb/userServiceCall.ts","src/routes/user.ts","src/routes/chat.ts","src/routes/chat/tyqw.ts","src/routes/chat/gpt3.ts","src/routes/home.ts"],"sourcesContent":["// Shim globals in esm bundle\nimport { fileURLToPath } from 'url'\nimport path from 'path'\n\nconst getFilename = () => fileURLToPath(import.meta.url)\nconst getDirname = () => path.dirname(getFilename())\n\nexport const __dirname = /* @__PURE__ */ getDirname()\nexport const __filename = /* @__PURE__ */ getFilename()\n","import express from \"express\";\nimport path from \"path\";\nimport cors from \"cors\";\nimport bodyParser from \"body-parser\";\nimport { wechatRouter, userRouter, chatRouter, homeRouter } from \"./src/routes\";\n\nconst app = express();\n\n// express允许跨域\napp.use(\n  cors({\n    origin: \"*\",\n  })\n);\napp.use(bodyParser.json({ limit: \"2mb\" }));\napp.use(express.json());\n\napp.use(express.static(path.join(__dirname, \"clientDist\")));\n\napp.use(\"/wechat\", wechatRouter);\napp.use(\"/\", homeRouter);\napp.use(\"/chat\", chatRouter);\napp.use(\"/user\", userRouter);\n\napp.set(\"port\", 3100); // 设定监听端口\n\n//启动监听\napp.listen(app.get(\"port\"), function () {\n  console.log(\"Express server listening http://localhost:3100\");\n});\n","import express from \"express\";\nconst router = express.Router();\nimport jsSHA from \"jssha\";\nimport { parseString } from \"xml2js\";\nimport jwt from \"jsonwebtoken\";\nimport myCache from \"../store\";\nimport { getRandomAvatar, getRandomName, randomCode } from \"../utils\";\nimport { userDB } from \"src/lowdb\";\nimport { nanoid } from \"nanoid\";\nimport moment from \"moment\";\n/**\n * 授权验证\n */\nrouter.get(\"/\", (req, res, next) => {\n  const token = process.env.WECHAT_TOKEN;\n  //1.获取微信服务器Get请求的参数 signature、timestamp、nonce、echostr\n  const { signature, timestamp, nonce, echostr } = req.query;\n\n  //2.将token、timestamp、nonce三个参数进行字典序排序\n  const array = [token, timestamp, nonce].sort();\n\n  //3.将三个参数字符串拼接成一个字符串进行sha1加密\n  const tempStr = array.join(\"\");\n  const shaObj = new jsSHA(\"SHA-1\", \"TEXT\");\n  shaObj.update(tempStr);\n  const scyptoString = shaObj.getHash(\"HEX\");\n\n  //4.开发者获得加密后的字符串可与signature对比，标识该请求来源于微信\n  if (signature === scyptoString) {\n    console.log(\"验证成功\");\n    res.send(echostr);\n  } else {\n    console.log(\"验证失败\");\n    res.send(\"验证失败\");\n  }\n});\n/**\n * 回复文字消息\n */\nfunction textMsg(toUser, fromUser, content) {\n  let resultXml = \"<xml><ToUserName><![CDATA[\" + fromUser + \"]]></ToUserName>\";\n  resultXml += \"<FromUserName><![CDATA[\" + toUser + \"]]></FromUserName>\";\n  resultXml += \"<CreateTime>\" + new Date().getTime() + \"</CreateTime>\";\n  resultXml += \"<MsgType><![CDATA[text]]></MsgType>\";\n  resultXml += \"<Content><![CDATA[\" + content + \"]]></Content></xml>\";\n  return resultXml;\n}\nrouter.get(\"/verify\", async function (req, res) {\n  const { code = \"\", loginType } = req.query;\n  const openId: string =\n    loginType === \"authCode\" ? (code as string) : myCache.get(code as string);\n  if (openId) {\n    await userDB.read();\n    const openIdInfo = userDB.data.find(item => item.openId === openId);\n    // 授权码登录方式\n    if (loginType === \"authCode\" && !openIdInfo) {\n      res.json({\n        code: 400,\n        msg: \"登录失败，授权码错误！-_-\",\n      });\n      return;\n    }\n\n    const tokenStr = jwt.sign({ openId }, process.env.JWT_SECRET_KEY, {\n      expiresIn: \"7d\",\n    });\n    res.json({\n      code: 200,\n      data: tokenStr,\n    });\n    if (!openIdInfo) {\n      await userDB.read();\n      await userDB.data.push({\n        openId,\n        id: nanoid(),\n        avatar: getRandomAvatar(),\n        name: getRandomName(),\n        createdAt: moment().format(\"YYYY-MM-DD HH:mm:ss\"),\n      });\n      await userDB.write();\n    }\n  } else {\n    res.json({\n      code: 400,\n      msg: \"您输入的验证码有误或已过期，请重新输入！-_-\",\n    });\n  }\n});\nrouter.get(\"/code\", function (req, res) {\n  myCache.set(\"1b7sm2\", \"123456\", 1 * 60 * 5);\n  res.json({\n    code: 200,\n  });\n});\nrouter.post(\"/\", function (req, res) {\n  var buffer = [];\n  req.on(\"data\", function (data) {\n    buffer.push(data);\n  });\n  // 内容接收完毕\n  req.on(\"end\", function () {\n    var msgXml = Buffer.concat(buffer).toString(\"utf-8\");\n    parseString(msgXml, { explicitArray: false }, function (err, result) {\n      if (err) throw err;\n      result = result.xml;\n      const { ToUserName, FromUserName, MsgType, Content } = result;\n      //回复普通消息\n      if (MsgType === \"text\") {\n        if (Content === \"登录\" || Content === \"登陆\" || Content === \"验证码\") {\n          const code = randomCode();\n          // 这里的FromUserName就是用户的openid\n          myCache.set(code, FromUserName, 1 * 60 * 5);\n          const sendXml = textMsg(\n            ToUserName,\n            FromUserName,\n            `您的登录验证码是：${code}  ,  有效期为5分钟。`\n          );\n          res.send(sendXml);\n        }\n      }\n    });\n  });\n});\n\nexport default router;\n","import NodeCache from \"node-cache\";\nconst myCache = new NodeCache();\nexport default myCache;\n","import type { Router } from \"express\";\nimport moment from \"moment\";\nimport { AVATARS } from \"src/constant\";\nimport { expressjwt } from \"express-jwt\";\n\n/**\n * 随机字符\n * @param len\n * @returns\n */\nexport function randomLetter(len: number) {\n  const letters = \"abcdefghjkmnpqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ23456789\";\n  let str = \"\";\n  for (let i = 0; i < len; i++) {\n    str += letters.charAt(Math.floor(Math.random() * letters.length));\n  }\n  return str;\n}\n\n// 随机生成6位数验证码\nexport function randomCode() {\n  return Math.random().toString().slice(-6);\n}\n/**\n * 获取随机头像id\n * @returns\n */\nexport function getRandomAvatar() {\n  return AVATARS[Math.floor(Math.random() * AVATARS.length)];\n}\n/**\n * 随机昵称\n * @returns\n */\nexport function getRandomName() {\n  const name = Math.random().toString(36).slice(-5).toUpperCase();\n  return `${name}-ChatGPTer`;\n}\n/**\n *\n * @returns 当天日期\n */\nexport function today() {\n  return moment().format(\"YYYY-MM-DD\");\n}\n/**\n * 头像校验\n * @param avatar\n * @returns\n */\nexport function validateAvatar(avatar) {\n  return AVATARS.includes(avatar) ? avatar : \"\";\n}\n\n/**\n * 用户权限校验\n * @param router\n */\nexport function onUserCheck(router: Router) {\n  router.use(\n    expressjwt({\n      secret: process.env.JWT_SECRET_KEY,\n      algorithms: [\"HS256\"],\n    })\n  );\n  router.use(function (err, req, res, next) {\n    if (err.name === \"UnauthorizedError\") {\n      res.status(401).json({\n        code: 401,\n        msg: \"token无效或已过期\",\n      });\n    } else {\n      next(err);\n    }\n  });\n}\n","export const AVATARS = [\n  \"1F0CF\",\n  \"1F344\",\n  \"1F345\",\n  \"1F346\",\n  \"1F347\",\n  \"1F348\",\n  \"1F349\",\n  \"1F351\",\n  \"1F352\",\n  \"1F353\",\n  \"1F354\",\n  \"1F367\",\n  \"1F368\",\n  \"1F369\",\n  \"1F370\",\n  \"1F371\",\n  \"1F379\",\n  \"1F380\",\n  \"1F381\",\n  \"1F382\",\n  \"1F383\",\n  \"1F384\",\n  \"1F385-1F3FE\",\n  \"1F386\",\n  \"1F387\",\n  \"1F388\",\n  \"1F389\",\n  \"1F391\",\n  \"1F392\",\n  \"1F3A0\",\n  \"1F3A1\",\n  \"1F3A2\",\n  \"1F3A7\",\n  \"1F3A8\",\n  \"1F3A9\",\n  \"1F3AF\",\n  \"1F3B4\",\n  \"1F3BD\",\n  \"1F3BE\",\n  \"1F3BF\",\n  \"1F3C0\",\n  \"1F3DA\",\n  \"1F3DC\",\n  \"1F3DD\",\n  \"1F3E0\",\n  \"1F3F5\",\n  \"1F3FA\",\n  \"1F405\",\n  \"1F407\",\n  \"1F408\",\n  \"1F412\",\n  \"1F413\",\n  \"1F415\",\n  \"1F419\",\n  \"1F422\",\n  \"1F425\",\n  \"1F431-200D-1F4BB\",\n  \"1F431\",\n  \"1F432\",\n  \"1F433\",\n  \"1F434\",\n  \"1F435\",\n  \"1F436\",\n  \"1F437\",\n  \"1F438\",\n  \"1F439\",\n  \"1F4AA-1F3FB\",\n  \"1F4E6\",\n  \"1F4EE\",\n  \"1F4EF\",\n  \"1F926-200D-2642-FE0F\",\n  \"1F932\",\n  \"1F934\",\n  \"1F935\",\n  \"1F936\",\n  \"1F937-1F3FB-200D-2642-FE0F\",\n  \"1F937-1F3FC\",\n  \"1F937-200D-2642-FE0F\",\n  \"1F955\",\n  \"1F957\",\n  \"262E\",\n  \"262F\",\n  \"E010\",\n  \"E044\",\n  \"E045\",\n  \"E049\",\n  \"E050\",\n  \"E053\",\n  \"E054\",\n  \"E05C\",\n  \"E097\",\n  \"E09F\",\n  \"E0AA\",\n  \"E0AB\",\n  \"E0AC-200D-2640-FE0F\",\n  \"E0C0\",\n  \"E0C4\",\n  \"E0C7\",\n  \"E0FF\",\n  \"E143\",\n  \"E1C2\",\n  \"E1C9\",\n  \"E1CA\",\n  \"E20A\",\n  \"E20B\",\n  \"E20C\",\n  \"E20D\",\n  \"E305\",\n  \"E306\",\n  \"E307\",\n  \"E30C\",\n  \"E30D\",\n  \"E340\",\n  \"E341\",\n];","import { Low } from \"lowdb\";\nimport { JSONFile } from \"lowdb/node\";\nimport { join } from \"node:path\";\n\ninterface User {\n  id: string;\n  openId: string;\n  avatar: string;\n  name: string;\n  createdAt: string;\n}\n\nconst user = new Low<User[]>(\n  new JSONFile(join(process.cwd(), \"/db/users.json\")),\n  []\n);\n\nexport default user;\n","import { Low } from \"lowdb\";\nimport { JSONFile } from \"lowdb/node\";\nimport { join } from \"node:path\";\n\ninterface UserServiceCall {\n  user_id: string;\n  date: string;\n  count: number;\n  history: string[];\n}\n\nexport default new Low<UserServiceCall[]>(\n  new JSONFile(join(process.cwd(), \"/db/userServiceCalls.json\")),\n  []\n);\n","import express from \"express\";\nimport { onUserCheck, randomLetter, today, validateAvatar } from \"src/utils\";\nimport { userDB, uscDB } from \"src/lowdb\";\nimport moment from \"moment\";\nconst router = express.Router();\n\nonUserCheck(router);\n\nrouter.get(\"/\", async function (req: any, res) {\n  const { openId } = req.auth;\n  await userDB.read();\n  await uscDB.read();\n  const data = userDB.data.find(item => item.openId === openId);\n  const current = uscDB.data.find(\n    item =>\n      item.user_id === openId && item.date === moment().format(\"YYYY-MM-DD\")\n  );\n\n  res.json({\n    code: 200,\n    data: {\n      ...data,\n      daily_limit: process.env.DAILY_LIMIT,\n      max_length: process.env.MAX_LENGTH,\n      current: current ? current.count : 0,\n    },\n  });\n});\nrouter.put(\"/\", async function (req: any, res) {\n  const { openId } = req.auth;\n  let { name, avatar } = req.body;\n  try {\n    await userDB.read();\n    let index = userDB.data.findIndex(item => item.openId === openId);\n    if (index !== -1) {\n      const info = userDB.data[index];\n      avatar = avatar ? validateAvatar(avatar) : info.avatar;\n      name = name ? name.trim().substring(0, 15) : info.name;\n      userDB.data[index].name = name;\n      userDB.data[index].avatar = avatar;\n      await userDB.write();\n    }\n    res.json({\n      code: 200,\n    });\n  } catch (error) {\n    res.status(400).json({\n      code: 10003,\n      message: \"用户信息更新失败\" + error.message,\n    });\n  }\n});\nexport default router;\n","import express from \"express\";\nimport { tyqw, gpt3 } from \"./chat/index\";\nimport { onUserCheck } from \"src/utils\";\n\nconst router = express.Router();\nonUserCheck(router);\n\ntyqw(router);\ngpt3(router);\n\nrouter.post(\"/\", async function (req: any, res) {\n  res.redirect(307, process.env.TY_API_KEY ? \"/chat/tyqw\" : \"/chat/gpt3\");\n});\n\nexport default router;\n","import { TongYiAPI } from \"ty-sdk\";\n\nimport { uscDB } from \"src/lowdb\";\nimport moment from \"moment\";\n\nexport default router => {\n  const ErrorCodeMessage: Record<string, string> = {\n    InvalidParameter:\n      \"接口调用参数不合法 | Required parameter(s) missing or invalid, please check the request parameters.\",\n    DataInspectionFailed:\n      \"数据检查错误，输入或者输出包含疑似敏感内容被绿网拦截 | Input or output data may contain inappropriate content.\",\n    \"BadRequest.EmptyInput\":\n      \"请求的输入不能为空 | Required input parameter missing from request.\",\n    \"BadRequest.EmptyParameters\":\n      '请求的参数\"parameters\"不能为空 | Required parameter \"parameters\" missing from request.',\n    \"BadRequest.EmptyModel\":\n      '请求输入的模型不能为空 | Required parameter \"model\" missing from request.',\n    InvalidURL: \"请求的 URL 错误 | Invalid URL provided in your request.\",\n    Arrearage:\n      \"客户账户因为欠费而被拒绝访问 | Access denied, please make sure your account is in good standing.\",\n    UnsupportedOperation:\n      \"关联的对象不支持该操作（可以根据实际情况修改） | The operation is unsupported on the referee object.\",\n    FlowNotPublished:\n      \"流程未发布，请发布流程后再重试。 | Flow has not published yet, please publish flow and try again.\",\n    InvalidSchema:\n      \"请输入数据库Schema信息。 | Database schema is invalid for text2sql.\",\n    InvalidSchemaFormat:\n      \"输入数据表信息格式异常。 | Database schema format is invalid for text2sql.\",\n    FaqRuleBlocked:\n      \"命中FAQ规则干预模块。 | Input or output data is blocked by faq rule.\",\n    CustomRoleBlocked:\n      \"请求或响应内容没有通过自定义策略。 | Input or output data may contain inappropriate content with custom rule.\",\n    InvalidApiKey: \"请求中的 ApiKey 错误 | Invalid API-key provided.\",\n    AccessDenied: \"无权访问此 API，比如不在邀测中 | Access denied.\",\n    \"AccessDenied.Unpurchased\":\n      \"客户没有开通此商品 | Access to model denied. Please make sure you are eligible for using the model.\",\n    WorkSpaceNotFound: \"用户空间信息不存在。 | WorkSpace can not be found.\",\n    ModelNotFound: \"当前访问的模型不存在。 | Model can not be found.\",\n    RequestTimeOut:\n      \"请求超时，请稍后再试。 | Request timed out, please try again later.\",\n    \"BadRequest.TooLarge\": \"接入层网关返回请求体过大错误。 | Payload Too Large\",\n    \"BadRequest.InputDownloadFailed\":\n      \"下载输入文件失败。 | Failed to download the input file: xxx\",\n    \"BadRequest.UnsupportedFileFormat\":\n      \"输入文件的格式不支持。 | Input file format is not supported.\",\n    Throttling: \"接口调用触发限流。 | Requests throttling triggered.\",\n    \"Throttling.RateQuota\":\n      \"调用频次触发限流，请稍后再试。 | Requests rate limit exceeded, please try again later.\",\n    \"Throttling.AllocationQuota\":\n      \"一段时间调用量触发限流，请增加配额限制。 | Allocated quota exceeded, please increase your quota limit.\",\n    \"AllocationQuota.FreeExceeded\":\n      \"免费额度已经耗尽，请开通计费访问。 | Free allocated quota exceeded.\",\n    PrepaidBillOverdue:\n      \"业务空间预付费账单到期。 | The prepaid bill is overdue.\",\n    PostpaidBillOverdue: \"模型推理商品已失效。 | The postpaid bill is overdue.\",\n    CommodityNotPurchased:\n      \"业务空间未订购。 | Commodity has not purchased yet.\",\n    InternalError:\n      \"内部错误，请稍后再试或联系客服。 | An internal error has occurred, please try again later or contact service support.\",\n    \"InternalError.Algo\":\n      \"内部算法执行错误，请稍后再试或联系客服。 | An internal error has occurred during execution, please try again later or contact service support.\",\n    SystemError:\n      \"系统错误，请稍后再试。 | An system error has occurred, please try again later.\",\n    \"InternalError.Timeout\":\n      \"内部超时错误，请稍后再试或联系客服。 | An internal timeout error has occurred during execution, please try again later or contact service support.\",\n    RewriteFailed:\n      \"调用改写prompt的大模型失败。 | Failed to rewrite content for prompt.\",\n    RetrivalFailed: \"文档检索失败。 | Failed to retrieve data from documents.\",\n    AppProcessFailed:\n      \"应用流程处理失败。 | Failed to proceed application request.\",\n    ModelServiceFailed: \"模型服务调用失败。 | Failed to request model service.\",\n    InvokePluginFailed: \"插件调用失败。 | Failed to invoke plugin.\",\n    ModelUnavailable:\n      \"模型暂时无法提供服务，请稍后再试。 | Model is unavailable, please try again later.\",\n  };\n  router.post(\"/tyqw\", async function (req: any, res) {\n    const api = new TongYiAPI({\n      apiKey: process.env.TY_API_KEY,\n      model: process.env.TY_MODEL || \"qwen-plus\",\n    });\n    const { message, parentMessageId } = req.body;\n    const { openId } = req.auth;\n\n    if (message.length > process.env.MAX_LENGTH) {\n      res.status(400).json({\n        code: 10001,\n        message: `消息长度不能超过${process.env.MAX_LENGTH}字符`,\n      });\n      return;\n    }\n\n    await uscDB.read();\n    const date = moment().format(\"YYYY-MM-DD\");\n    const uscInfo = await uscDB.data.find(\n      item => item.date === date && item.user_id === openId\n    );\n\n    if (!uscInfo) {\n      uscDB.data.push({\n        user_id: openId,\n        date,\n        history: [moment().format(\"HH:mm:ss\")],\n        count: 1,\n      });\n    } else {\n      if (uscInfo.count >= Number(process.env.DAILY_LIMIT)) {\n        res.status(400).json({\n          code: 10002,\n          message: \"今日服务调用次数已达上限\",\n        });\n        return;\n      }\n      uscInfo.count += 1;\n      uscInfo.history.push(moment().format(\"HH:mm:ss\"));\n    }\n    await uscDB.write();\n\n    try {\n      let options = { parentMessageId };\n      res.setHeader(\"Content-type\", \"application/octet-stream\");\n      let firstChunk = true;\n      const json = await api.sendMessage(message, {\n        ...options,\n        onProgress: chat => {\n          if (!chat.delta) return;\n          res.write(\n            firstChunk ? JSON.stringify(chat) : `\\n${JSON.stringify(chat)}`\n          );\n          firstChunk = false;\n        },\n      });\n      res.end();\n    } catch (error) {\n      await uscDB.read();\n      const uscInfo = await uscDB.data.find(\n        item => item.date === date && item.user_id === openId\n      );\n      uscInfo.count -= 1;\n      uscInfo.history.pop();\n      await uscDB.write();\n      const code = error.statusCode;\n      if (Reflect.has(ErrorCodeMessage, code)) {\n        res.status(400).json({\n          code,\n          message: ErrorCodeMessage[code],\n        });\n      } else {\n        res.status(400).json({\n          code: 10003,\n          message: \"服务调用失败：\" + error.message,\n        });\n      }\n    }\n  });\n};\n","import { ChatGPTAPI } from \"chatgpt\";\n\nimport moment from \"moment\";\nimport { uscDB } from \"src/lowdb\";\nexport default router => {\n  const ErrorCodeMessage: Record<string, string> = {\n    401: \"[OpenAI] 提供错误的API密钥 | Incorrect API key provided\",\n    403: \"[OpenAI] 服务器拒绝访问，请稍后再试 | Server refused to access, please try again later\",\n    429: \"[OpenAI] 1分钟内请求超过限制，限制 3 / min | Rate limit reached for default-gpt-3.5-turbo in organization\",\n    502: \"[OpenAI] 错误的网关 |  Bad Gateway\",\n    503: \"[OpenAI] 服务器繁忙，请稍后再试 | Server is busy, please try again later\",\n    504: \"[OpenAI] 网关超时 | Gateway Time-out\",\n    500: \"[OpenAI] 服务器繁忙，请稍后再试 | Internal Server Error\",\n  };\n\n  router.post(\"/gpt3\", async function (req: any, res) {\n    const api = new ChatGPTAPI({\n      apiKey: process.env.GPT3_API_KEY,\n      apiBaseUrl: process.env.GPT3_BASE_URL,\n      completionParams: {\n        model: process.env.GPT3_MODEL,\n      },\n    });\n    const { message, parentMessageId } = req.body;\n    const { openId } = req.auth;\n\n    if (message.length > process.env.MAX_LENGTH) {\n      res.status(400).json({\n        code: 10001,\n        message: `消息长度不能超过${process.env.MAX_LENGTH}字符`,\n      });\n      return;\n    }\n\n    await uscDB.read();\n    const date = moment().format(\"YYYY-MM-DD\");\n    const uscInfo = await uscDB.data.find(\n      item => item.date === date && item.user_id === openId\n    );\n\n    if (!uscInfo) {\n      uscDB.data.push({\n        user_id: openId,\n        date,\n        history: [moment().format(\"HH:mm:ss\")],\n        count: 1,\n      });\n    } else {\n      if (uscInfo.count >= Number(process.env.DAILY_LIMIT)) {\n        res.status(400).json({\n          code: 10002,\n          message: \"今日服务调用次数已达上限\",\n        });\n        return;\n      }\n      uscInfo.count += 1;\n      uscInfo.history.push(moment().format(\"HH:mm:ss\"));\n    }\n    await uscDB.write();\n\n    try {\n      let options = { parentMessageId };\n      res.setHeader(\"Content-type\", \"application/octet-stream\");\n      let firstChunk = true;\n      await api.sendMessage(message, {\n        ...options,\n        onProgress: chat => {\n          if (!chat.delta) return;\n          res.write(\n            firstChunk ? JSON.stringify(chat) : `\\n${JSON.stringify(chat)}`\n          );\n          firstChunk = false;\n        },\n      });\n      res.end();\n    } catch (error) {\n      await uscDB.read();\n      const uscInfo = await uscDB.data.find(\n        item => item.date === date && item.user_id === openId\n      );\n      uscInfo.count -= 1;\n      uscInfo.history.pop();\n      await uscDB.write();\n      const code = error.statusCode;\n      if (Reflect.has(ErrorCodeMessage, code)) {\n        res.status(400).json({\n          code,\n          message: ErrorCodeMessage[code],\n        });\n      } else {\n        res.status(400).json({\n          code: 10003,\n          message: \"服务调用失败：\" + error.message,\n        });\n      }\n    }\n  });\n};\n","import express from \"express\";\nimport { onUserCheck } from \"src/utils\";\nconst router = express.Router();\nonUserCheck(router);\nrouter.get(\"/status\", async function (req, res) {\n  res.json({\n    code: 200,\n  });\n});\nexport default router;\n"],"mappings":"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","names":["express","path","router","Low","JSONFile","join","moment","express","moment","router","express","user_default","express","moment","router","uscInfo","moment","router","moment","uscInfo","router","express","express","router","express","express","path","user_default"]}